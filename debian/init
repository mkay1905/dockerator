#!/bin/sh
# Start/stop Dockerator.
#
### BEGIN INIT INFO
# Provides:             dockerator
# Required-Start:       $local_fs $remote_fs $network $syslog
# Required-Stop:        $local_fs $remote_fs $network $syslog
# Should-Start:         docker
# Should-Stop:          docker
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    Dockers Launcher.
# Description:          Dockers as service by Waycom.
### END INIT INFO
#set -x
set -e

NAME="dockerator"
SCRIPT="/usr/bin/${NAME}"
EXTRAOPTS=""
export DOCKERATOR_INIT="yes"

test -x "${SCRIPT}" || exit 0

[ -r "/etc/default/${NAME}" ] && . "/etc/default/${NAME}"

if [ ! -z "${2}" ];
then
    OPT_NAME="-n ${2}"
else
    OPT_NAME=""
fi

. /lib/lsb/init-functions

case "${1}" in
    start)
        if [ "${DOCKERATOR_ENABLE}" = "no" ];
        then
            log_failure_msg "Not starting Dockerator: disabled via /etc/default/${NAME}"
            exit 0
        fi

        log_daemon_msg "Starting Dockerator" "${NAME}"
        ${SCRIPT} -a start ${OPT_NAME} ${EXTRAOPTS}
        log_end_msg ${?}
        ;;
    stop)
        log_daemon_msg "Stopping Dockerator" "${NAME}"
        ${SCRIPT} -a stop ${OPT_NAME} ${EXTRAOPTS}
        log_end_msg ${?}
        ;;
    reload)
        log_daemon_msg "Reloading Dockerator" "${NAME}"
        ${SCRIPT} -a reload ${OPT_NAME} ${EXTRAOPTS}
        log_end_msg ${?}
        ;;
    restart)
        log_daemon_msg "Restarting Dockerator" "${NAME}"
        ${SCRIPT} -a restart ${OPT_NAME} ${EXTRAOPTS}
        log_end_msg ${?}
        ;;
    *)
        log_action_msg "Usage: ${0} {start|stop|restart|reload} [name]"
        exit 2
    ;;
esac
